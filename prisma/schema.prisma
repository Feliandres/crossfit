// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  output          = "./generated/client"
  previewFeatures = ["postgresqlExtensions"]
  //extensions = [hstore(schema: "myHstoreSchema"), pg_trgm, postgis(version: "2.1")]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  //extensions = [uuidOssp(map: "uuid-ossp")]
}

model Crossfit {
  id        Int    @id @default(autoincrement())
  ruc       String @db.VarChar(13)
  nombre    String @db.VarChar(50)
  direccion String @db.VarChar(150)
  telefono  String @db.VarChar(20)
  email     String @db.VarChar(255)
}

model Plan {
  id          Int      @id @default(autoincrement())
  nombre      String   @unique @db.VarChar(50)
  descripcion String   @db.VarChar(255)
  valor       Decimal  @db.Decimal(5, 2)
  duracion    Int      @db.Integer
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Member      Member[]
}

model Member {
  id                 Int          @id @default(autoincrement())
  cedula             String       @db.VarChar(13)
  nombre             String       @db.VarChar(50)
  apellido           String       @db.VarChar(50)
  email              String       @unique @db.VarChar(100)
  telefono           String       @db.VarChar(20)
  telefonoEmergencia String       @db.VarChar(20)
  fechaNacimiento    DateTime     @db.Date
  sexo               String       @db.Char(1)
  direccion          String       @db.VarChar(255)
  nacionalidad       String       @db.VarChar(50)
  fechaInscripcion   DateTime     @default(now())
  estado             Boolean?     @default(true) @db.Boolean()
  plan               Plan?        @relation(fields: [planId], references: [id])
  planId             Int          @default(1)
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  Asistencia         Attendance[]
  Pago               Pay[]
}

model Attendance {
  id        Int      @id @default(autoincrement())
  fecha     DateTime @db.Timestamp()
  miembro   Member   @relation(fields: [miembroId], references: [id])
  miembroId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pay {
  id        Int      @id @default(autoincrement())
  fecha     DateTime @db.Date
  miembro   Member   @relation(fields: [miembroId], references: [id])
  miembroId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  nombre    String   @db.VarChar(50)
  apellido  String   @db.VarChar(50)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(255)
  estado    Boolean?     @default(true) @db.Boolean()
  rol       Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
  TRAINER
}
